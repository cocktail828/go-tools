package generator

import (
	"github.com/cocktail828/go-tools/tools/goctl/env"
	"github.com/cocktail828/go-tools/xlog/colorful"
)

// Generator defines the environment needs of rpc service generation
type Generator struct {
	log     *colorful.Logger
	verbose bool
}

// NewGenerator returns an instance of Generator
func NewGenerator(verbose bool) *Generator {
	return &Generator{
		log:     colorful.Default(),
		verbose: verbose,
	}
}

// Prepare provides environment detection generated by rpc service,
// including go environment, protoc, whether protoc-gen-go is installed or not
func (g *Generator) Prepare() error {
	return env.Prepare(true, true, g.verbose)
}
